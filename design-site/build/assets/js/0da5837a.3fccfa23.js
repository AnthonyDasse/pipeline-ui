(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3466],{888:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return r},toc:function(){return u},default:function(){return h}});var l=t(2122),i=t(9756),s=(t(7294),t(3905)),o=t(6086),a=["components"],d={},c="Pipeline Class",r={unversionedId:"pipeline",id:"pipeline",isDocsHomePage:!1,title:"Pipeline Class",description:"A custom class to sign and send transactions with MyAlgo Connect and check balances. For advanced users who do not wish to use the Algo Components with hard-coded onClick functions.",source:"@site/docs/pipeline.mdx",sourceDirName:".",slug:"/pipeline",permalink:"/docs/pipeline",editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/pipeline.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code-Lite: Our Philosophy",permalink:"/docs/philosophy"},next:{title:"Why Pipeline?",permalink:"/docs/start"}},u=[{value:"Methods",id:"methods",children:[]},{value:"Use Examples",id:"use-examples",children:[]}],p={toc:u};function h(n){var e=n.components,t=(0,i.Z)(n,a);return(0,s.kt)("wrapper",(0,l.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"pipeline-class"},"Pipeline Class"),(0,s.kt)("p",null,"A custom class to sign and send transactions with MyAlgo Connect and check balances. For advanced users who do not wish to use the Algo Components with hard-coded onClick functions. "),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)(o.Z,{mdxType:"Table"},(0,s.kt)("thead",null,(0,s.kt)("tr",null,(0,s.kt)("th",null,"Method"),(0,s.kt)("th",null,"Returns"),(0,s.kt)("th",null,"Description"))),(0,s.kt)("tbody",null,(0,s.kt)("tr",null,(0,s.kt)("td",null,"Pipeline.init()"),(0,s.kt)("td",null,"new instance of MyAlgo"),(0,s.kt)("td",null,"Must be called once before connect or send methods")),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Pipeline.balance(address)"),(0,s.kt)("td",null,'string (balance + "Algos")'),(0,s.kt)("td",null,"Takes input string address. Pipeline.init not neccesary for use.")),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Pipeline.connect"),(0,s.kt)("td",null,"string (address)"),(0,s.kt)("td",null,"Generates pop-up to sign in. Must be called before Pipeline.send")),(0,s.kt)("tr",null,(0,s.kt)("td",null,"Pipeline.send"),(0,s.kt)("td",null,"string (transaction id) "),(0,s.kt)("td",null,"Can only be called after Pipeline.init and Pipeline.connect.")))),(0,s.kt)("h2",{id:"use-examples"},"Use Examples"),(0,s.kt)("p",null,"Uncomment to experiment with the Pipeline class!"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"import {Pipeline} from 'pipeline-ui';\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'\nfunction App () {\n\nvar balance = 0;\n\nconst address ="LMKFQIPL3VQCZGGFK4WZ7FPCQWLNBTJQ3UWSTA7D7QZSPJTZQKTDVT7WG4"\n\nfunction myBalance(){Pipeline.balance(address).then(data => alert(data));}\n\n /*\n\nconst myAlgoWallet = Pipeline.init();\n\nPipeline.connect(myAlgoWallet)\n    .then(data => {\n        console.log(data);\n    });\n\nPipeline.send(address, amount, note, sendingAddress, myAlgowallet, index)\n    .then(data => {\n        console.log(data);\n    });\n*/\n    return(\n      <div>\n        <h1>uncomment and edit the code to make things happen!</h1>\n        <button onClick={myBalance}>Click to check balance</button>\n      </div>\n    );\n\n}\n\n')))}h.isMDXComponent=!0}}]);