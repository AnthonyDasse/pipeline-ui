(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3466],{888:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return r},metadata:function(){return p},toc:function(){return c},default:function(){return h}});var i=t(2122),l=t(9756),o=(t(7294),t(3905)),s=t(6086),a=["components"],d={},r="Pipeline Class",p={unversionedId:"pipeline",id:"pipeline",isDocsHomePage:!1,title:"Pipeline Class",description:"A custom class to sign and send transactions with MyAlgo Connect and check balances. For advanced users who do not wish to use the Algo Components with hard-coded onClick functions. Note: the codesandbox example uses @pipeline-ui-2/pipeline.",source:"@site/docs/pipeline.mdx",sourceDirName:".",slug:"/pipeline",permalink:"/docs/pipeline",editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/pipeline.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code-Lite: Our Philosophy",permalink:"/docs/philosophy"},next:{title:"Why Pipeline?",permalink:"/docs/start"}},c=[{value:"Use Example",id:"use-example",children:[]},{value:"Methods",id:"methods",children:[]}],u={toc:c};function h(e){var n=e.components,t=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pipeline-class"},"Pipeline Class"),(0,o.kt)("p",null,"A custom class to sign and send transactions with MyAlgo Connect and check balances. For advanced users who do not wish to use the Algo Components with hard-coded onClick functions. Note: the codesandbox example uses ",(0,o.kt)("inlineCode",{parentName:"p"},"@pipeline-ui-2/pipeline"),"."),(0,o.kt)("h2",{id:"use-example"},"Use Example"),(0,o.kt)("p",null,"(Live updates coming soon)"),(0,o.kt)("iframe",{src:"https://codesandbox.io/embed/github/headline-design/Pipeline/tree/main/example?codemirror=1&fontsize=14&hidenavigation=1&theme=dark",width:"100%",height:"1000px",title:"example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)(s.Z,{mdxType:"Table"},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Method"),(0,o.kt)("th",null,"Returns"),(0,o.kt)("th",null,"Description"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Pipeline.init()"),(0,o.kt)("td",null,"new instance of MyAlgo"),(0,o.kt)("td",null,"Must be called once before connect or send methods")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"Pipeline.balance(address)"),(0,o.kt)("td",null,'string (balance + "Algos")'),(0,o.kt)("td",null,"Takes input string address. Pipeline.init not neccesary for use.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"Pipeline.connect"),(0,o.kt)("td",null,"string (address)"),(0,o.kt)("td",null,"Generates pop-up to sign in. Must be called before Pipeline.send")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"Pipeline.send"),(0,o.kt)("td",null,"string (transaction id) "),(0,o.kt)("td",null,"Can only be called after Pipeline.init and Pipeline.connect.")))))}h.isMDXComponent=!0}}]);