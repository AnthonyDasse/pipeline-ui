(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4607],{5711:function(t,n,o){"use strict";o.r(n),o.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return a},toc:function(){return c},BrowserOnlyButton:function(){return d},default:function(){return A}});var e=o(2122),l=o(9756),r=(o(7294),o(3905)),s=o(1262),u=["components"],i={},p="AlgoButton",a={unversionedId:"Algo Components/AlgoButton",id:"Algo Components/AlgoButton",isDocsHomePage:!1,title:"AlgoButton",description:"A button to connect to MyAlgo.",source:"@site/docs/Algo Components/AlgoButton.mdx",sourceDirName:"Algo Components",slug:"/Algo Components/AlgoButton",permalink:"/docs/Algo Components/AlgoButton",editUrl:"https://github.com/headline-design/pipeline-ui/docs/Algo Components/AlgoButton.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AlgoAddress",permalink:"/docs/Algo Components/AlgoAddress"},next:{title:"AlgoFetch",permalink:"/docs/Algo Components/AlgoFetch"}},c=[{value:"Use Example",id:"use-example",children:[]}];function d(){return(0,r.kt)(s.Z,{fallback:(0,r.kt)("p",null,"Some Fallback Content"),mdxType:"BrowserOnly"},(function(){var t=o(140).vg,n=o(140).B_;return(0,r.kt)(t,{wallet:n.init(),mdxType:"AlgoButton"})}))}m="AlgoButton";var m,g={toc:c,BrowserOnlyButton:d};function A(t){var n=t.components,o=(0,l.Z)(t,u);return(0,r.kt)("wrapper",(0,e.Z)({},g,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"algobutton"},"AlgoButton"),(0,r.kt)("p",null,"A button to connect to MyAlgo. "),(0,r.kt)("p",null,"Generates a popup window to connect to MyAlgo. Uppon success, returns first wallet address to the context and returnTo specified."),(0,r.kt)(d,{mdxType:"BrowserOnlyButton"}),(0,r.kt)("h2",{id:"use-example"},"Use Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { Component } from 'react';\nimport { AlgoButton, Pipeline} from 'pipeline-ui';\n\n\nclass TestButton extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      Algaddress: \"\"\n    }\n  }\n  \n  myAlgoWallet = Pipeline.init();\n\n  render() {\n    return <div>\n      <AlgoButton \n            wallet={this.myAlgoWallet} \n            context={this} \n            returnTo={\"Algaddress\"} \n            />\n      <h1>{this.state.Algaddress}</h1>\n    </div>\n  }\n}\n\nexport default TestButton;\n")))}A.isMDXComponent=!0}}]);