(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3708],{3195:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var o=t(2122),a=t(9756),i=(t(7294),t(3905)),s=["components"],r={},c="Basics",l={unversionedId:"Tips & Solutions/common",id:"Tips & Solutions/common",isDocsHomePage:!1,title:"Basics",description:"Tips and tricks for common issues.",source:"@site/docs/Tips & Solutions/common.mdx",sourceDirName:"Tips & Solutions",slug:"/Tips & Solutions/common",permalink:"/docs/Tips & Solutions/common",editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/Tips & Solutions/common.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Transaction Demo",permalink:"/docs/Demos/transaction"},next:{title:"CSS & Style Guide",permalink:"/docs/css"}},d=[{value:"How do I make a blank React app?",id:"how-do-i-make-a-blank-react-app",children:[]},{value:"setState is not defined",id:"setstate-is-not-defined",children:[]},{value:"How to trigger other actions after connecting to MyAlgo or sending a transaction",id:"how-to-trigger-other-actions-after-connecting-to-myalgo-or-sending-a-transaction",children:[]}],p={toc:d};function u(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basics"},"Basics"),(0,i.kt)("p",null,"Tips and tricks for common issues."),(0,i.kt)("h2",{id:"how-do-i-make-a-blank-react-app"},"How do I make a blank React app?"),(0,i.kt)("p",null,"In command prompt, enter:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app myApp\n")),(0,i.kt)("p",null,'Running this command generates a new folder called "myApp" (or whichever custom name you specify). Inside this folder you will find several pre-configured files. The primary file that you will be working with is App.js that is found in the src folder. '),(0,i.kt)("h2",{id:"setstate-is-not-defined"},"setState is not defined"),(0,i.kt)("p",null,"Make sure that your app is written as a class rather than as a function. Your code in App.js should look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, {Component} from 'react';\n\nclass myApp extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            myValue: \"\", //your values go here\n\n        };\n    }\n\n    //your function and lifecycle code goes here\n\n    render(){\n        return ( //your jsx code goes between the <div> tags below:\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n")),(0,i.kt)("h2",{id:"how-to-trigger-other-actions-after-connecting-to-myalgo-or-sending-a-transaction"},"How to trigger other actions after connecting to MyAlgo or sending a transaction"),(0,i.kt)("p",null,"Add the following code just above the ",(0,i.kt)("inlineCode",{parentName:"p"},"render()")," call:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"}," componentDidUpdate(_prevProps, prevState) {\n    if (prevState.address !== this.state.address){ // note: address can be replaced with any state key\n        //do something\n    }\n }\n")),(0,i.kt)("p",null,"In order to avoid an inifinite loop and browser crashing, setState (or functions that setState) should only be called in ",(0,i.kt)("inlineCode",{parentName:"p"},"componentDidUpdate")," in a conditional block."))}u.isMDXComponent=!0}}]);