{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/live","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"React Live Editor","editLink":"https://github.com/headline-design/pipeline-ui/edit/masterC:/Users/headl/Documents/GitHub/pipeline-ui/design-site/website/pages/docs/live.mdx"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Live Editor\",\n  \"section\": \"Guides\",\n  \"slug\": \"/docs/live\",\n  \"order\": 4\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(LiveConfig, {\n    modules: {\n      'pipeline-ui': {\n        Loader: Loader\n      }\n    },\n    mdxType: \"LiveConfig\"\n  }), mdx(\"h1\", {\n    \"id\": \"react-live-editor\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#react-live-editor\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"React Live Editor\"), mdx(\"p\", null, \"Build interactive documentation using React Live Editor.\"), mdx(\"h2\", {\n    \"id\": \"write-live-code\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#write-live-code\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Write live code\"), mdx(\"p\", null, \"To include a live code editor, add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"live\"), \" in the head of your code block:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"```js live\\n<div>Example</div>\\n```\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Result:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<div>Example</div>\\n\")), mdx(\"h2\", {\n    \"id\": \"write-complex-examples\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#write-complex-examples\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Write complex examples\"), mdx(\"p\", null, \"By default only a single JSX expression is allowed. It is common to have to write more complex examples. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noInline\"), \" flag makes it possible. When activated, you have to call a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"render()\"), \" method to define the expression rendered in preview:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"```js live noInline\\nconst content = 'Example'\\nrender(<div>{content}</div>)\\n```\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Result:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"live noInline\",\n    \"live\": true,\n    \"noInline\": true\n  }, \"const content = 'Example'\\nrender(<div>{content}</div>)\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"To know more about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noInline\"), \" mode, read \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/FormidableLabs/react-live#what-code-can-i-use\"\n  }, \"react-live documentation\"), \".\")), mdx(\"h2\", {\n    \"id\": \"import-modules\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#import-modules\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Import modules\"), mdx(\"p\", null, \"Importing modules is possible in a React Live Editor using ESM \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import\"), \" syntax. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"It is an emulation of the import, it means you don't have access to all modules by default.\"), \" To be able to import a module, first you have to specify it using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LiveConfig\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"---\\ntitle: Doc Page\\n---\\n\\nimport { Loader } from 'pipeline-ui'\\nimport { LiveConfig } from 'smooth-doc/components'\\n\\n<!-- Define `@xstyled/styled-components` module as `{ x }` -->\\n<LiveConfig modules={{ 'pipeline-ui': { Loader } }} />\\n\")), mdx(\"p\", null, \"Once defined, you have access to the module in live editor:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"live noInline\",\n    \"live\": true,\n    \"noInline\": true\n  }, \"import { Loader } from 'pipeline-ui'\\n\\n// I can use xstyled here.\\nrender(\\n <div> <Loader/></div>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#react-live-editor","title":"React Live Editor","items":[{"url":"#write-live-code","title":"Write live code"},{"url":"#write-complex-examples","title":"Write complex examples"},{"url":"#import-modules","title":"Import modules"}]}]}}},"pageContext":{"id":"3a79e8b5-2b61-564f-a51e-2a431374077c"}},"staticQueryHashes":["1022386572","1122327541","1339625561","2140385554","3442269102","4275725850"]}